config loaded.
nll weight: 1.0, pixel weight: 1.0, vgg weight: 1.0
use crop dataset for vgg loss
/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/usr/local/lib/python3.10/dist-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG19_Weights.IMAGENET1K_V1`. You can also use `weights=VGG19_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
train dataset: sr-implicit-downsampled-fast-crop
val dataset: sr-implicit-downsampled-fast
/usr/local/lib/python3.10/dist-packages/torch/functional.py:507: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3549.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
train dataset: size=16000
  inp: shape=(3, 48, 48)
  coord: shape=(48, 48, 2)
  cell: shape=(2,)
  gt: shape=(3, 48, 48)
val dataset: size=1600
  inp: shape=(3, 48, 48)
  coord: shape=(48, 48, 2)
  cell: shape=(2,)
  gt: shape=(3, 48, 48)
device: cuda:0
model: #params=1.6M
lr: 0.0001
train:   0%|                              | 0/1000 [00:00<?, ?it/s]/usr/lib/python3.10/multiprocessing/popen_fork.py:66: RuntimeWarning: os.fork() was called. os.fork() is incompatible with multithreaded code, and JAX is multithreaded, so this will likely lead to a deadlock.
  self.pid = os.fork()
Area Shape: [torch.Size([16, 48, 48]), torch.Size([16, 48, 48]), torch.Size([16, 48, 48]), torch.Size([16, 48, 48])]
Feature Shape: torch.Size([16, 256, 24, 24])
Total Area Shape: torch.Size([16, 48, 48])
Traceback (most recent call last):
  File "/content/drive/MyDrive/LINF/train.py", line 418, in <module>
    main(config, save_path)
  File "/content/drive/MyDrive/LINF/train.py", line 316, in main
    train_loss = train(train_loader, model, optimizer, epoch, config['patch'])
  File "/content/drive/MyDrive/LINF/train.py", line 118, in train
    log_p = model("query_log_p", inp=inp, feat=feat, coord=batch['coord'], cell=batch['cell'], gt=gt)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/content/drive/MyDrive/LINF/models/linf.py", line 149, in forward
    return self.query_log_p(inp, feat, coord, cell, gt)
  File "/content/drive/MyDrive/LINF/models/linf.py", line 84, in query_log_p
    features = torch.cat([a/tot_area.unsqueeze(1) * feat for a in areas], dim=1)
  File "/content/drive/MyDrive/LINF/models/linf.py", line 84, in <listcomp>
    features = torch.cat([a/tot_area.unsqueeze(1) * feat for a in areas], dim=1)
RuntimeError: The size of tensor a (48) must match the size of tensor b (24) at non-singleton dimension 3